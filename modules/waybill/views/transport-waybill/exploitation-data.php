<?php

use app\models\GridColumn;
use app\models\TransportExpensesSellerType;
use app\models\TransportWaybill;
use app\models\TransportWaybillTripEvents;
use app\widgets\SelectWidget;
use kartik\dynagrid\DynaGrid;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;
use yii\grid\GridView;
//use kartik\grid\GridView;

use app\helpers\table\PageSizeHelper;
use yii\web\ForbiddenHttpException;
use yii\web\JsExpression;
use yii\widgets\LinkPager;
use app\widgets\periodPicker\PeriodPicker;
use kartik\export\ExportMenu;


$this->title = 'Данные эксплуатации';
//$this->params['breadcrumbs'][] = $this->title;

$user = Yii::$app->user->identity;

$pagination = $dataProvider->getPagination();
$pagination->totalCount = $dataProvider->getTotalCount();

$this->registerCssFile('css/waybill-exploitation-data.css', ['depends'=>'app\assets\AppAsset']);
$this->registerCssFile('css/waybill.css', ['depends'=>'app\assets\AppAsset']);
$this->registerJsFile('js/site/waybill-exploitation-data.js', ['depends'=>'app\assets\AppAsset']);
$this->registerJsFile('js/site/waybill.js', ['depends'=>'app\assets\AppAsset']);
?>

<?= $this->render('_menu') ?>

<?php
$expenses_seller_type_azs = TransportExpensesSellerType::find()->where(['name' => 'АЗС'])->one();
if($expenses_seller_type_azs == null) {
    throw new ForbiddenHttpException('Не найден тип продавца АЗС');
}

$trip_events = TransportWaybillTripEvents::find()->all();




$gridColumns = [
    [
        'content' => function ($model, $key, $index) {
            return $key;
        },
        'header' => '#',
    ],

    [
        'class' => 'yii\grid\ActionColumn',
        'template' => '{update} ',
        'options' => ['style' => 'width: 25px;'],
    ],
];
$exportColumns = [
    ['class' => 'kartik\grid\SerialColumn'],
];



$column = [
    'attribute' => 'number',
    'label' => '№ ПЛ',
    'content' => function ($model) {
        return $model->number;
    }
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'date_of_issue',
    'label' => 'ДВ ПЛ',
    'content' => function ($model) {
        return ($model->date_of_issue > 0 ? date('d.m.Y', $model->date_of_issue) : '');
    },
    'filter' => PeriodPicker::widget([
        'model' => $searchModel,
        'attribute' => 'date_of_issue',
        'isFilterInGridView' => true,
        'clearButton' => false
    ]),
    'footer' => 'Итого на странице:',
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'transport_id',
    'content' => function ($model) {
        return ($model->transport_id > 0 ? $model->transport->sh_model.' '.$model->transport->car_reg : '');
    },
    'filter' => SelectWidget::widget([
        'model' => $searchModel,
        'attribute' => 'transport_id',
        'name' => 'transport_id',
        'initValueText' => ($searchModel->transport_id > 0 && $searchModel->transport != null ? $searchModel->transport->name3 : ''),
        'options' => [
            'placeholder' => 'Введите название...',
        ],
        'ajax' => [
            'url' => '/trip-transport/ajax-get-transports-names',
            'data' => new JsExpression('function(params) {
                return {
                    search: params.search,
                    format: "name3"
                };
            }'),
        ],
        //'using_delete_button' => false
    ])
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'driver_id',
    'content' => function ($model) {
        //return ($model->driver_id > 0 ? mb_substr($model->driver->fio, 0, 9, 'UTF-8') : '');
        if($model->driver_id > 0) {
            if(mb_strlen($model->driver->fio, 'UTF-8') > 9) {
                return  mb_substr($model->driver->fio, 0, 9, 'UTF-8').'...';
            }else {
                return $model->driver->fio;
            }
        }else {
            return '';
        }
    },
    'filter' => SelectWidget::widget([
        'model' => $searchModel,
        'attribute' => 'driver_id',
        'name' => 'driver_id',
        'initValueText' => ($searchModel->driver_id > 0 && $searchModel->driver != null ? $searchModel->driver->fio : ''),
        'options' => [
            'placeholder' => 'Введите название...',
        ],
        'ajax' => [
            'url' => '/trip-transport/ajax-get-drivers-names',
            'data' => new JsExpression('function(params, $obj) {
                return {
                    search: params.search
                };
            }'),
        ],
        //'using_delete_button' => false
    ])
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'waybill_state',
    'content' => function ($model) {
        return (isset(TransportWaybill::getWaybillStates()[$model->waybill_state]) ? TransportWaybill::getWaybillStates()[$model->waybill_state] : $model->waybill_state);
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'waybill_state',
        ['' => 'Все'] + TransportWaybill::getWaybillStates(),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    ),
//        'footer' => Yii::$app->formatter->asCurrency(
//            GridColumn::pageTotal($dataProvider->models, 'waybill_state'),
//            'RUB'
//        ),
    'footer' => GridColumn::pageTotal($dataProvider->models, 'waybill_state')
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'values_fixed_state',
    'content' => function ($model) {
        return (isset(TransportWaybill::getValuesFixedStates()[$model->values_fixed_state]) ? TransportWaybill::getValuesFixedStates()[$model->values_fixed_state] : $model->values_fixed_state);
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'values_fixed_state',
        ['' => 'Все'] + TransportWaybill::getValuesFixedStates(),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    ),
    'footer' => GridColumn::pageTotal($dataProvider->models, 'values_fixed_state')
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'gsm',
    'content' => function ($model) {
        return (isset(TransportWaybill::getGsms()[$model->gsm]) ? TransportWaybill::getGsms()[$model->gsm] : $model->gsm);
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'gsm',
        ['' => 'Все'] + TransportWaybill::getGsms(),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    ),
    'footer' => GridColumn::pageTotal($dataProvider->models, 'gsm')
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'klpto',
    'label' => 'КЛПТО',
    'content' => function ($model) {
        return (isset(TransportWaybill::getKlpto()[$model->klpto]) ? TransportWaybill::getKlpto()[$model->klpto] : $model->klpto);
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'klpto',
        ['' => 'Все'] + TransportWaybill::getKlpto(),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    ),
    'footer' => GridColumn::pageTotal($dataProvider->models, 'klpto')
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'klpto_comment',
    'label' => 'Прим. к КЛПТО',
    'content' => function ($model) {
        return $model->klpto_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;



$column = [
    'attribute' => 'trip_event1_id',
    'label' => 'С1',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent1 != null ? $model->tripEvent1->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event1_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event1_comment',
    'label' => 'Прим. к С1',
    'content' => function ($model) {
        return $model->trip_event1_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event2_id',
    'label' => 'С2',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent2 != null ? $model->tripEvent2->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event2_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event2_comment',
    'label' => 'Прим. к С2',
    'content' => function ($model) {
        return $model->trip_event2_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event3_id',
    'label' => 'С3',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent3 != null ? $model->tripEvent3->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event3_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event3_comment',
    'label' => 'Прим. к С3',
    'content' => function ($model) {
        return $model->trip_event3_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event4_id',
    'label' => 'С4',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent4 != null ? $model->tripEvent4->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event4_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event4_comment',
    'label' => 'Прим. к С4',
    'content' => function ($model) {
        return $model->trip_event4_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event5_id',
    'label' => 'С5',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent5 != null ? $model->tripEvent5->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event5_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event5_comment',
    'label' => 'Прим. к С5',
    'content' => function ($model) {
        return $model->trip_event5_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event6_id',
    'label' => 'С6',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent6 != null ? $model->tripEvent6->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event6_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event6_comment',
    'label' => 'Прим. к С6',
    'content' => function ($model) {
        return $model->trip_event6_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event7_id',
    'label' => 'С7',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent7 != null ? $model->tripEvent7->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event7_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event7_comment',
    'label' => 'Прим. к С7',
    'content' => function ($model) {
        return $model->trip_event7_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event8_id',
    'label' => 'С8',
    'content' => function ($model) use($trip_events) {
        return ($model->tripEvent8 != null ? $model->tripEvent8->name : '');
    },
    'filter' => Html::activeDropDownList(
        $searchModel,
        'trip_event8_id',
        ['' => 'Все'] + ArrayHelper::map($trip_events, 'id', 'name'),
        [
            'class' => "form-control",
            'style' => 'min-width: 100px;'
        ]
    )
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'trip_event8_comment',
    'label' => 'Прим. к С8',
    'content' => function ($model) {
        return $model->trip_event8_comment;
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;

$column = [
    'label' => 'Сй',
    'content' => function ($model) {
        $num = 0;
        if(!empty($model->trip_event1_id)) {
            $num++;
        }
        if(!empty($model->trip_event2_id)) {
            $num++;
        }
        if(!empty($model->trip_event3_id)) {
            $num++;
        }
        if(!empty($model->trip_event4_id)) {
            $num++;
        }
        if(!empty($model->trip_event5_id)) {
            $num++;
        }
        if(!empty($model->trip_event6_id)) {
            $num++;
        }
        if(!empty($model->trip_event7_id)) {
            $num++;
        }
        if(!empty($model->trip_event8_id)) {
            $num++;
        }

        return $num;
    }
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'mileage_dif',
    'label' => 'Пробег на круге',
    'content' => function ($model) {
        if($model->mileage_after_departure > 0 && $model->mileage_before_departure > 0) {
            return $model->mileage_after_departure - $model->mileage_before_departure;
        }else {
            return 0;
        }
    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$column = [
    'attribute' => 'consumption_per_100_km',
    'label' => 'Расход топлива на 100 км',
    'content' => function ($model) use($expenses_seller_type_azs) {

        $azs_fuel_summ = 0;
        $mileage_dif = 0;
        if($model->mileage_after_departure > 0 && $model->mileage_before_departure > 0) {

            $mileage_dif = $model->mileage_after_departure - $model->mileage_before_departure;

            $transport_expenses = $model->transportExpenses;
            foreach ($transport_expenses as $tr_expenses) {
                if ($tr_expenses->expenses_seller_type_id == $expenses_seller_type_azs->id) {
                    $azs_fuel_summ += $tr_expenses->count; // литры заправленные на АЗС
                }
            }
        }

        // нужно "Кол-во литров умножаем на 100 и делим на пробег"

        if($mileage_dif > 0) {
            return 100*round($azs_fuel_summ/$mileage_dif, 4);
        }else {
            return '';
        }

    },
];
$exportColumns[] = $column;
$gridColumns[] = $column;


$gridColumns[] = [
    'attribute' => 'accruals_to_issue_for_trip',
    'label' => 'Оплата',
    'content' => function ($model){

        if(in_array(Yii::$app->session->get('role_alias'), ['root', 'admin'])) {
            return Html::activeTextInput($model, 'accruals_to_issue_for_trip', [
                'class' => 'form-control',
                'waybill-id' => $model->id,
                'field' => 'accruals_to_issue_for_trip'
            ]);
        }else {
            return (!empty($model->accruals_to_issue_for_trip) ? $model->accruals_to_issue_for_trip : '');
        }
    }
];
$exportColumns[] = [
    'attribute' => 'accruals_to_issue_for_trip',
    'label' => 'Оплата',
    'content' => function ($model) {
        return (!empty($model->accruals_to_issue_for_trip) ? $model->accruals_to_issue_for_trip : '');
    }
];


?>
<h2><?= Html::encode($this->title) ?></h2>
<div id="transport-waybill-index" class="box box-default">

    <div class="box-header scroller with-border">
        <div class="pull-left">
            <?php
            //echo Html::a('<i class="glyphicon glyphicon-plus"></i> Создать путевой лист', ['create'], ['class' => 'btn btn-success']);
            ?>
        </div>

        <br />
        <div class="pull-left">
            <?php
//            $exportColumns = [
//                ['class' => 'kartik\grid\SerialColumn'],
//            ];
            //$exportColumns = array_merge($exportColumns, $columns);

            echo '<div style="vertical-align: top; display: inline-block;">'.ExportMenu::widget([
                    'dataProvider' => $dataProvider,
                    'columns' => $exportColumns,
                    'fontAwesome' => true
                ]).'</div>';
            ?>
        </div>

        <div class="pull-left">
            <?php
            if(empty(Yii::$app->session->get('table-rows'))) {
                Yii::$app->session->set('table-rows', 20);
            }

            echo LinkPager::widget([
                'pagination' => $pagination,
                'options' => [
                    'class' => 'pagination pagination-sm',
                    'style' => 'margin: 4px 20px 0 30px;'
                ]
            ]);
            ?>
        </div>
        <?php
        //Yii::$app->session->set('table-rows', 20);
        echo (new PageSizeHelper([10, 20, 50, 100, 200, 500]))->getButtons();
        ?>
    </div>

    <br /><br />
    <div class="box-body box-table" style="clear: both;">

        <?php

//        $gridColumns = [
//            [
//                'content' => function ($model, $key, $index) {
//                    return $key;
//                },
//                'header' => '#',
//            ],
//
//            [
//                'class' => 'yii\grid\ActionColumn',
//                'template' => '{update} ',
//                'options' => ['style' => 'width: 25px;'],
//            ],
//        ];
//
//        $gridColumns = array_merge($gridColumns, $columns);

        echo GridView::widget([
            'dataProvider' => $dataProvider,
            'filterModel' => $searchModel,
            'layout'=>"{summary}\n<div class='exploitation-data-table-over'><div class='exploitation-data-table-inner'>{items}</div></div>",
            'options' => [
                'class' => 'grid-view table-responsive',
                //'id' => 'table-block'
            ],
            'tableOptions' => [
                //'class' => 'table table-condensed table-bordered table-hover',
                'class' => 'table table-striped table-bordered',
                'id' => 'exploitation-data-table'
            ],
            'columns' => $gridColumns,
            'showFooter' => true,
        ]);
        ?>

        <?php
        echo Html::a('Сохранить изменения', ['#'], ['id' => 'save-exploitation-table', 'class' => 'btn btn-success']);
        ?>

    </div>
</div>
